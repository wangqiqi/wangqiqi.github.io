import{_ as i,c as a,o as n,a2 as t}from"./chunks/framework.BHFiY1p-.js";const c=JSON.parse('{"title":"Ubuntu 下通过 deb 安装 TensorRT 8.6.1 的完整指南（含问题排查与验证）","description":"","frontmatter":{"layout":"doc","title":"Ubuntu 下通过 deb 安装 TensorRT 8.6.1 的完整指南（含问题排查与验证）","tags":["TensorRT","CUDA","cuDNN","Linux","DeepLearning","Inference"],"categories":["技术工具"],"lastUpdated":true,"sidebar":true},"headers":[],"relativePath":"posts/Ubuntu/Ubuntu 下通过 deb 安装 TensorRT 8.6.1 的完整指南.md","filePath":"posts/Ubuntu/Ubuntu 下通过 deb 安装 TensorRT 8.6.1 的完整指南.md","lastUpdated":1760322573000}'),e={name:"posts/Ubuntu/Ubuntu 下通过 deb 安装 TensorRT 8.6.1 的完整指南.md"};function l(h,s,p,k,d,r){return n(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="🧠-ubuntu-下通过-deb-安装-tensorrt-8-6-1-的完整指南-含问题排查与验证" tabindex="-1">🧠 Ubuntu 下通过 deb 安装 TensorRT 8.6.1 的完整指南（含问题排查与验证） <a class="header-anchor" href="#🧠-ubuntu-下通过-deb-安装-tensorrt-8-6-1-的完整指南-含问题排查与验证" aria-label="Permalink to &quot;🧠 Ubuntu 下通过 deb 安装 TensorRT 8.6.1 的完整指南（含问题排查与验证）&quot;">​</a></h1><blockquote><p><strong>适用环境</strong>：Ubuntu 22.04 + CUDA 11.8 + 手动安装 cuDNN + APT 安装 TensorRT <strong>目标</strong>：成功安装并验证 TensorRT，解决常见依赖与路径问题</p></blockquote><hr><h2 id="一、背景" tabindex="-1">一、背景 <a class="header-anchor" href="#一、背景" aria-label="Permalink to &quot;一、背景&quot;">​</a></h2><p>TensorRT 是 NVIDIA 提供的高性能推理引擎，广泛用于部署深度学习模型。官方提供 <code>.deb</code> 包安装方式，但在实际使用中常因 <strong>cuDNN 版本不匹配</strong> 或 <strong>路径配置问题</strong> 导致安装失败或运行异常。</p><p>本文记录了从安装到验证的完整过程，重点解决以下典型问题：</p><ul><li>APT 安装 TensorRT 时因 cuDNN 依赖失败</li><li><code>ldconfig</code> 报 “not a symbolic link” 警告</li><li><code>trtexec</code> 命令找不到</li><li>如何验证 TensorRT 是否真正可用</li></ul><hr><h2 id="二、安装流程简述" tabindex="-1">二、安装流程简述 <a class="header-anchor" href="#二、安装流程简述" aria-label="Permalink to &quot;二、安装流程简述&quot;">​</a></h2><h3 id="_1-安装-cuda-11-8" tabindex="-1">1. 安装 CUDA 11.8 <a class="header-anchor" href="#_1-安装-cuda-11-8" aria-label="Permalink to &quot;1. 安装 CUDA 11.8&quot;">​</a></h3><p>通过官方 <code>.run</code> 文件或 <code>.deb</code> 包安装：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cuda-toolkit-11-8</span></span></code></pre></div><h3 id="_2-手动安装-cudnn-如-8-9-7" tabindex="-1">2. 手动安装 cuDNN（如 8.9.7） <a class="header-anchor" href="#_2-手动安装-cudnn-如-8-9-7" aria-label="Permalink to &quot;2. 手动安装 cuDNN（如 8.9.7）&quot;">​</a></h3><p>从 NVIDIA 官网下载 cuDNN for CUDA 11.8，解压后复制到 CUDA 目录：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libcudnn</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.so</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/cuda-11.8/targets/x86_64-linux/lib/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a+r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/cuda-11.8/targets/x86_64-linux/lib/libcudnn</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span></code></pre></div><blockquote><p>⚠️ 此时 <code>libcudnn.so.8</code> 是普通文件，非符号链接 → 后续会引发 <code>ldconfig</code> 警告。</p></blockquote><h3 id="_3-安装-tensorrt-通过官方-deb-包" tabindex="-1">3. 安装 TensorRT（通过官方 deb 包） <a class="header-anchor" href="#_3-安装-tensorrt-通过官方-deb-包" aria-label="Permalink to &quot;3. 安装 TensorRT（通过官方 deb 包）&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加本地仓库（以 8.6.1 + CUDA 11.8 为例）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nv-tensorrt-local-repo-ubuntu2204-8.6.1-cuda-11.8_1.0-1_amd64.deb</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/nv-tensorrt-local-repo-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/7fa2af80.pub</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/keyrings/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tensorrt</span></span></code></pre></div><hr><h2 id="三、常见问题与解决方案" tabindex="-1">三、常见问题与解决方案 <a class="header-anchor" href="#三、常见问题与解决方案" aria-label="Permalink to &quot;三、常见问题与解决方案&quot;">​</a></h2><h3 id="❌-问题-1-apt-安装失败-提示缺少-libcudnn8" tabindex="-1">❌ 问题 1：APT 安装失败，提示缺少 <code>libcudnn8</code> <a class="header-anchor" href="#❌-问题-1-apt-安装失败-提示缺少-libcudnn8" aria-label="Permalink to &quot;❌ 问题 1：APT 安装失败，提示缺少 \`libcudnn8\`&quot;">​</a></h3><p><strong>原因</strong>：APT 无法识别手动安装的 cuDNN。</p><p><strong>✅ 解决方案：创建虚拟包欺骗 APT</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装 equivs 工具</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> equivs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建虚拟包定义</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libcudnn8</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Section: misc</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Priority: optional</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Standards-Version: 3.9.2</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Package: libcudnn8</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Version: 8.9.7-1+cuda11.8</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Description: Fake libcudnn8 to satisfy APT</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 构建并安装虚拟包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">equivs-build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libcudnn8</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libcudnn8_8.9.7-1+cuda11.8_all.deb</span></span></code></pre></div><p>之后即可正常 <code>apt install tensorrt</code>。</p><hr><h3 id="⚠️-问题-2-ldconfig-报-not-a-symbolic-link-警告" tabindex="-1">⚠️ 问题 2：<code>ldconfig</code> 报 “not a symbolic link” 警告 <a class="header-anchor" href="#⚠️-问题-2-ldconfig-报-not-a-symbolic-link-警告" aria-label="Permalink to &quot;⚠️ 问题 2：\`ldconfig\` 报 “not a symbolic link” 警告&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/sbin/ldconfig.real:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/cuda/.../libcudnn.so.8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> symbolic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span></span></code></pre></div><p><strong>原因</strong>：手动复制的 <code>libcudnn.so.8</code> 是普通文件，而非指向 <code>libcudnn.so.8.9.7</code> 的符号链接。</p><p><strong>✅ 解决方案：重建符号链接</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/cuda/targets/x86_64-linux/lib/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libcudnn</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.so.8</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libcudnn.so.8.9.7</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libcudnn.so.8</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libcudnn_ops_infer.so.8.9.7</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libcudnn_ops_infer.so.8</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ... 其他组件同理</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ldconfig</span></span></code></pre></div><blockquote><p>💡 此警告不影响功能，但修复后更规范。</p></blockquote><hr><h3 id="❌-问题-3-trtexec-command-not-found" tabindex="-1">❌ 问题 3：<code>trtexec: command not found</code> <a class="header-anchor" href="#❌-问题-3-trtexec-command-not-found" aria-label="Permalink to &quot;❌ 问题 3：\`trtexec: command not found\`&quot;">​</a></h3><p><strong>原因</strong>：<code>trtexec</code> 位于 <code>/usr/src/tensorrt/bin/</code>，但未加入 <code>PATH</code>。</p><p><strong>✅ 解决方案：添加到环境变量</strong></p><p>编辑 <code>~/.bashrc</code>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TENSORRT_ROOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/usr/src/tensorrt</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$TENSORRT_ROOT/bin:$PATH</span></span></code></pre></div><p>然后：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.bashrc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">trtexec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 应正常输出帮助信息</span></span></code></pre></div><hr><h2 id="四、完整验证步骤" tabindex="-1">四、完整验证步骤 <a class="header-anchor" href="#四、完整验证步骤" aria-label="Permalink to &quot;四、完整验证步骤&quot;">​</a></h2><h3 id="✅-1-检查安装状态" tabindex="-1">✅ 1. 检查安装状态 <a class="header-anchor" href="#✅-1-检查安装状态" aria-label="Permalink to &quot;✅ 1. 检查安装状态&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tensorrt</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 应看到 tensorrt 和 libnvinfer8 等包</span></span></code></pre></div><h3 id="✅-2-检查动态库注册" tabindex="-1">✅ 2. 检查动态库注册 <a class="header-anchor" href="#✅-2-检查动态库注册" aria-label="Permalink to &quot;✅ 2. 检查动态库注册&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ldconfig</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvinfer</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 应列出 libnvinfer.so.8 等</span></span></code></pre></div><h3 id="✅-3-编译并运行官方示例" tabindex="-1">✅ 3. 编译并运行官方示例 <a class="header-anchor" href="#✅-3-编译并运行官方示例" aria-label="Permalink to &quot;✅ 3. 编译并运行官方示例&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 复制示例到用户目录（避免权限问题）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/src/tensorrt/samples/sampleOnnxMNIST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/sampleOnnxMNIST</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./sample_onnx_mnist</span></span></code></pre></div><p><strong>成功输出示例</strong>：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[10/12/2025-18:42:17] [I]  Prob 4  0.9911 Class 4: **********</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>&amp;&amp;&amp;&amp; PASSED TensorRT.sample_onnx_mnist</span></span></code></pre></div><p>✅ 表示 CUDA + cuDNN + TensorRT 全链路正常！</p><h3 id="✅-4-测试-trtexec" tabindex="-1">✅ 4. 测试 <code>trtexec</code> <a class="header-anchor" href="#✅-4-测试-trtexec" aria-label="Permalink to &quot;✅ 4. 测试 \`trtexec\`&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">trtexec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --onnx=/path/to/model.onnx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --verbose</span></span></code></pre></div><p>可用于快速构建 <code>.engine</code> 推理引擎。</p><hr><h2 id="五、环境变量建议-bashrc-配置" tabindex="-1">五、环境变量建议（<code>.bashrc</code> 配置） <a class="header-anchor" href="#五、环境变量建议-bashrc-配置" aria-label="Permalink to &quot;五、环境变量建议（\`.bashrc\` 配置）&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># CUDA</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CUDA_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/usr/local/cuda-11.8</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$CUDA_HOME/bin:$PATH</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LD_LIBRARY_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$CUDA_HOME/lib64:$LD_LIBRARY_PATH</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># TensorRT</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TENSORRT_ROOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/usr/src/tensorrt</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$TENSORRT_ROOT/bin:$PATH</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># OpenCV / ONNX Runtime（按需）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LD_LIBRARY_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$LD_LIBRARY_PATH:$HOME/install/opencv4.5.4/lib</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LD_LIBRARY_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$LD_LIBRARY_PATH:$HOME/install/onnxruntime-linux-x64-gpu-1.15.1/lib</span></span></code></pre></div><blockquote><p>🔔 注意：TensorRT 库已安装在 <code>/usr/lib/x86_64-linux-gnu/</code>，<strong>无需额外添加 <code>LD_LIBRARY_PATH</code></strong>。</p></blockquote><hr><h2 id="六、进阶-多版本-opencv-共存" tabindex="-1">六、进阶：多版本 OpenCV 共存 <a class="header-anchor" href="#六、进阶-多版本-opencv-共存" aria-label="Permalink to &quot;六、进阶：多版本 OpenCV 共存&quot;">​</a></h2><p>若需为不同程序使用不同 OpenCV 版本：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 临时指定库路径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LD_LIBRARY_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/path/to/opencv4.8.0/lib</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ./your_program</span></span></code></pre></div><p>或编译时设置 <code>RPATH</code>，或使用 Conda/Docker 隔离环境。</p><hr><h2 id="七、总结" tabindex="-1">七、总结 <a class="header-anchor" href="#七、总结" aria-label="Permalink to &quot;七、总结&quot;">​</a></h2><table tabindex="0"><thead><tr><th>步骤</th><th>状态</th></tr></thead><tbody><tr><td>✅ CUDA 11.8 安装</td><td>完成</td></tr><tr><td>✅ cuDNN 8.9.7 手动安装</td><td>完成</td></tr><tr><td>✅ TensorRT 8.6.1 通过 deb 安装</td><td>成功（借助虚拟包）</td></tr><tr><td>✅<code>ldconfig</code> 警告修复</td><td>已处理</td></tr><tr><td>✅<code>trtexec</code> 全局可用</td><td>已配置</td></tr><tr><td>✅ 官方示例运行成功</td><td>✅ 验证通过</td></tr></tbody></table><hr><h2 id="📚-参考资料" tabindex="-1">📚 参考资料 <a class="header-anchor" href="#📚-参考资料" aria-label="Permalink to &quot;📚 参考资料&quot;">​</a></h2><ul><li><a href="https://docs.nvidia.com/deeplearning/tensorrt/" target="_blank" rel="noreferrer">NVIDIA TensorRT 官方文档</a></li><li><a href="https://docs.nvidia.com/deeplearning/cudnn/install-guide/" target="_blank" rel="noreferrer">cuDNN 安装指南</a></li><li><code>man ldconfig</code>, <code>man ld.so</code></li></ul>`,69)])])}const g=i(e,[["render",l]]);export{c as __pageData,g as default};
