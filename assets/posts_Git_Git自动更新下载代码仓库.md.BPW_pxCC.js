import{_ as i,c as a,o as n,a2 as t}from"./chunks/framework.BHFiY1p-.js";const E=JSON.parse('{"title":"Git自动更新下载代码仓库","description":"","frontmatter":{"title":"Git自动更新下载代码仓库","date":"2025-01-01T00:00:00.000Z","categories":["Git"],"tags":["Git常用命令","仓库更新","自动下载"]},"headers":[],"relativePath":"posts/Git/Git自动更新下载代码仓库.md","filePath":"posts/Git/Git自动更新下载代码仓库.md","lastUpdated":1758809068000}'),l={name:"posts/Git/Git自动更新下载代码仓库.md"};function p(h,s,e,k,r,d){return n(),a("div",null,[...s[0]||(s[0]=[t(`<div class="language-batch vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">batch</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@echo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> off</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">setlocal</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">REM</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 设置 Git 仓库根目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rootDirectory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\\path\\to\\git\\folders&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">REM</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 使用 for /r 循环遍历目录树</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /R </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">%rootDirectory%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> %%i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (.) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> exist</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%%i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\\.git\\&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Found Git repository in folder: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">%%i</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        pushd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%%i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        REM</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 判断当前是否为 PowerShell 环境，如果是则使用 PowerShell 执行命令</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        powershell</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -Command </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;if ($Host.Name -eq &#39;ConsoleHost&#39;) { git pull origin HEAD; git submodule update --init --recursive } else { cmd /c &#39;git pull origin HEAD &amp; git submodule update --init --recursive&#39; }&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        popd</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Finished updating repository and submodules.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> All repositories have been updated.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">endlocal</span></span></code></pre></div>`,1)])])}const g=i(l,[["render",p]]);export{E as __pageData,g as default};
