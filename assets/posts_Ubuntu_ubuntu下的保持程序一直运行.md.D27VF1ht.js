import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.B-XtCDNB.js";const c=JSON.parse('{"title":"Ubuntu下的保持程序一直运行","description":"","frontmatter":{"title":"Ubuntu下的保持程序一直运行","date":"2025-01-01T00:00:00.000Z","categories":["Ubuntu"],"tags":["application"]},"headers":[],"relativePath":"posts/Ubuntu/ubuntu下的保持程序一直运行.md","filePath":"posts/Ubuntu/ubuntu下的保持程序一直运行.md","lastUpdated":1758809068000}'),l={name:"posts/Ubuntu/ubuntu下的保持程序一直运行.md"};function n(p,s,h,o,d,r){return e(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="useapplication-重启程序-保持一直运行状态" tabindex="-1">useApplication 重启程序（保持一直运行状态） <a class="header-anchor" href="#useapplication-重启程序-保持一直运行状态" aria-label="Permalink to &quot;useApplication 重启程序（保持一直运行状态）&quot;">​</a></h1><h2 id="目标" tabindex="-1">目标 <a class="header-anchor" href="#目标" aria-label="Permalink to &quot;目标&quot;">​</a></h2><p>确保 <code>useApplication</code> 在意外停止后能够自动重启，提高服务的可用性和稳定性。</p><h2 id="环境" tabindex="-1">环境 <a class="header-anchor" href="#环境" aria-label="Permalink to &quot;环境&quot;">​</a></h2><ul><li>操作系统：Ubuntu 22.04 (jetson)</li><li>应用程序：<code>useApplication</code></li><li>安装路径：<code>/home/nvidia/install/APP</code></li></ul><h2 id="步骤" tabindex="-1">步骤 <a class="header-anchor" href="#步骤" aria-label="Permalink to &quot;步骤&quot;">​</a></h2><h3 id="_1-创建-systemd-服务文件" tabindex="-1">1. 创建 <code>systemd</code> 服务文件 <a class="header-anchor" href="#_1-创建-systemd-服务文件" aria-label="Permalink to &quot;1. 创建 \`systemd\` 服务文件&quot;">​</a></h3><ol><li><p><strong>打开终端</strong>。</p></li><li><p><strong>创建服务文件</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gedit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/systemd/system/useapp.service</span></span></code></pre></div></li><li><p><strong>编辑服务文件</strong>，输入以下内容：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=UserAPP Service</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">After</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=network.target</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=nvidia</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WorkingDirectory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/home/nvidia/install/APP</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">LD_LIBRARY_PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/home/nvidia/install/APP:$LD_LIBRARY_PATH</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ExecStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/home/nvidia/install/APP/useApplication</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=always </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置服务在任何情况下都重新启动</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RestartSec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=5s</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WantedBy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=multi-user.target</span></span></code></pre></div><p><strong>解释</strong>：</p><ul><li><code>[Unit]</code>：服务的基本信息。 <ul><li><code>Description</code>：服务的描述。</li><li><code>After</code>：确保服务在网络服务启动之后再启动。</li></ul></li><li><code>[Service]</code>：服务的具体配置。 <ul><li><code>User</code>：运行服务的用户。</li><li><code>WorkingDirectory</code>：服务的工作目录。</li><li><code>Environment</code>：设置环境变量 <code>LD_LIBRARY_PATH</code>。</li><li><code>ExecStart</code>：启动服务的命令。</li><li><code>Restart</code>：设置服务在任何情况下都重新启动。</li><li><code>RestartSec</code>：服务重启前的等待时间（秒）。</li></ul></li><li><code>[Install]</code>：安装配置。 <ul><li><code>WantedBy</code>：服务在多用户模式下启动。</li></ul></li></ul></li><li><p><strong>保存并关闭编辑器</strong>（按 <code>Ctrl+X</code>，然后按 <code>Y</code>，最后按 <code>Enter</code>）。</p></li></ol><h3 id="_2-重新加载-systemd-配置" tabindex="-1">2. 重新加载 <code>systemd</code> 配置 <a class="header-anchor" href="#_2-重新加载-systemd-配置" aria-label="Permalink to &quot;2. 重新加载 \`systemd\` 配置&quot;">​</a></h3><ol><li><strong>重新加载 <code>systemd</code> 配置</strong>：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> daemon-reload</span></span></code></pre></div></li></ol><h3 id="_3-启用并启动服务" tabindex="-1">3. 启用并启动服务 <a class="header-anchor" href="#_3-启用并启动服务" aria-label="Permalink to &quot;3. 启用并启动服务&quot;">​</a></h3><ol><li><p><strong>启用服务</strong>（确保服务在系统启动时自动启动）：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> useapp.service</span></span></code></pre></div></li><li><p><strong>启动服务</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> useapp.service</span></span></code></pre></div></li></ol><h3 id="_4-检查服务状态" tabindex="-1">4. 检查服务状态 <a class="header-anchor" href="#_4-检查服务状态" aria-label="Permalink to &quot;4. 检查服务状态&quot;">​</a></h3><ol><li><p><strong>检查服务状态</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> useapp.service</span></span></code></pre></div><p><strong>预期输出</strong>：</p><ul><li>服务应显示为 <code>active (running)</code>。</li><li>如果服务未启动，查看错误信息并进行相应调整。</li></ul></li></ol><h3 id="_5-查看日志" tabindex="-1">5. 查看日志 <a class="header-anchor" href="#_5-查看日志" aria-label="Permalink to &quot;5. 查看日志&quot;">​</a></h3><ol><li><p><strong>查看 <code>systemd</code> 日志</strong>，以了解服务启动和重启的详细信息：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> journalctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> useapp.service</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --since</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;10 minutes ago&quot;</span></span></code></pre></div><p><strong>解释</strong>：</p><ul><li><code>--since &quot;10 minutes ago&quot;</code>：只显示最近10分钟的日志。</li><li>查看日志中的错误信息，以确定服务启动失败的原因。</li></ul></li></ol><h3 id="_6-手动测试" tabindex="-1">6. 手动测试 <a class="header-anchor" href="#_6-手动测试" aria-label="Permalink to &quot;6. 手动测试&quot;">​</a></h3><ol><li><p><strong>手动终止 <code>useApplication</code> 进程</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pgrep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> useApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li><li><p><strong>等待几秒钟</strong>，然后检查进程是否重新启动：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -aux</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> useApplication</span></span></code></pre></div><p><strong>预期输出</strong>：</p><ul><li>应能看到 <code>useApplication</code> 进程重新启动。</li></ul></li></ol>`,18)])])}const g=i(l,[["render",n]]);export{c as __pageData,g as default};
