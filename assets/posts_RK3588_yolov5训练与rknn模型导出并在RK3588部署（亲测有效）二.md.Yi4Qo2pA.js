import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.B-XtCDNB.js";const g=JSON.parse('{"title":"Yolov5训练与Rknn模型导出并在Rk3588部署（亲测有效）二","description":"","frontmatter":{"title":"Yolov5训练与Rknn模型导出并在Rk3588部署（亲测有效）二","date":"2025-01-01T16:45:54.000Z","categories":["RK3588"],"tags":["YOLOv5","RK3588","部署"]},"headers":[],"relativePath":"posts/RK3588/yolov5训练与rknn模型导出并在RK3588部署（亲测有效）二.md","filePath":"posts/RK3588/yolov5训练与rknn模型导出并在RK3588部署（亲测有效）二.md","lastUpdated":1758809068000}'),l={name:"posts/RK3588/yolov5训练与rknn模型导出并在RK3588部署（亲测有效）二.md"};function e(h,s,p,k,d,o){return t(),a("div",null,[...s[0]||(s[0]=[n(`<h2 id="一、rknn-模型的导出" tabindex="-1">一、rknn 模型的导出 <a class="header-anchor" href="#一、rknn-模型的导出" aria-label="Permalink to &quot;一、rknn 模型的导出&quot;">​</a></h2><p>请参考其他博客和仓库；</p><p><a href="https://blog.csdn.net/zhoujinwang/article/details/130524310?spm=1001.2014.3001.5501" target="_blank" rel="noreferrer">CSDN 黄金旺铺</a></p><p><strong>训练与导出仓库</strong></p><p><a href="https://github.com/wangqiqi/yolov5/tree/rknn_dev" target="_blank" rel="noreferrer">github仓库</a></p><h2 id="二、测试验证" tabindex="-1">二、测试验证 <a class="header-anchor" href="#二、测试验证" aria-label="Permalink to &quot;二、测试验证&quot;">​</a></h2><ol><li><strong><code>git clone</code> 仓库到本地</strong></li></ol><p><a href="https://github.com/wangqiqi/rk3588_yolov5_deploy.git" target="_blank" rel="noreferrer">rk3588_yolov5_deploy</a></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/wangqiqi/rk3588_yolov5_deploy.git</span></span></code></pre></div><p><strong>NOTE: 此处说的本地就是开发板，需要将开发板联网，并配置相关git信息</strong></p><ol start="2"><li><strong>编译安装</strong></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build_rk3588_yolov5.sh</span></span></code></pre></div><ol start="3"><li><strong>测试</strong></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_rk3588_yolov5.sh</span></span></code></pre></div><h2 id="三、rknn-部署自己的模型和项目" tabindex="-1">三、<code>rknn</code> 部署自己的模型和项目 <a class="header-anchor" href="#三、rknn-部署自己的模型和项目" aria-label="Permalink to &quot;三、\`rknn\` 部署自己的模型和项目&quot;">​</a></h2><ol><li>将导出的 <code>rknn</code> 模型，放到 <code>assets</code> 文件夹下；</li><li>修改 <code>assets/labels_list.txt</code> 文件，将训练的目标类别名称分行存储；</li><li>添加测试图片到 <code>assets</code> 文件夹下；</li><li>根据项目需要，修改文件中相关信息</li></ol><p>文件 <code>yolov5/include/postprocess.h</code> 中 <code>line 7~11</code></p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OBJ_NAME_MAX_SIZE</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 最长目标名称</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OBJ_NUMB_MAX_SIZE</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 64</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 最多目标个数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OBJ_CLASS_NUM</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // 目标类别数--需要根据项目进行修改</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NMS_THRESH</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.45</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // NMS 阈值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BOX_THRESH</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.25</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // 目标置信度</span></span></code></pre></div><ol start="5"><li>编译安装与测试</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build_rk3588_yolov5.sh</span></span></code></pre></div><blockquote><p>修改脚本<code>test_rk3588_yolov5.sh</code> 中不同的模型和测试图片</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ROOT_PWD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$( </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$( </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dirname</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> )&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$( </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dirname</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SOURCE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot; )&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">INSTALL_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${ROOT_PWD}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${INSTALL_DIR}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./rk3588_yolov5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> assets/drp.rknn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> assets/drp.png</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span></span></code></pre></div><p>然后执行</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_rk3588_yolov5.sh</span></span></code></pre></div><h2 id="四、清理" tabindex="-1">四、清理 <a class="header-anchor" href="#四、清理" aria-label="Permalink to &quot;四、清理&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean_all.sh</span></span></code></pre></div>`,26)])])}const c=i(l,[["render",e]]);export{g as __pageData,c as default};
